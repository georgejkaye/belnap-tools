// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belnap from "../theory/Belnap.res.mjs";
import * as Core__Int from "@rescript/core/src/Core__Int.res.mjs";
import * as MoreReact from "../bindings/MoreReact.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function onChangeValue(setValue, ev) {
  var value = Core__Int.fromString(ev.target.value, undefined);
  console.log(value);
  if (value !== undefined) {
    return setValue(function (param) {
                return value;
              });
  } else {
    return setValue(function (param) {
                
              });
  }
}

function TruthTable$InputOutputSelector(props) {
  var setOutputs = props.setOutputs;
  var outputs = props.outputs;
  var setInputs = props.setInputs;
  var inputs = props.inputs;
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("input", {
                      type: "number",
                      value: inputs !== undefined ? inputs.toString() : "",
                      onChange: (function (extra) {
                          return onChangeValue(setInputs, extra);
                        })
                    }),
                JsxRuntime.jsx("input", {
                      type: "number",
                      value: outputs !== undefined ? outputs.toString() : "",
                      onChange: (function (extra) {
                          return onChangeValue(setOutputs, extra);
                        })
                    })
              ]
            });
}

var InputOutputSelector = {
  onChangeValue: onChangeValue,
  make: TruthTable$InputOutputSelector
};

function TruthTable$ValuePickerOption(props) {
  var value = props.value;
  return JsxRuntime.jsx("option", {
              children: Belnap.string_of_value(value),
              value: Belnap.string_of_value(value)
            });
}

var ValuePickerOption = {
  make: TruthTable$ValuePickerOption
};

function TruthTable$TruthTableRow(props) {
  return JsxRuntime.jsx("div", {
              children: MoreReact.mapi(props.row[0], (function (input, key) {
                      return JsxRuntime.jsxs("select", {
                                  children: [
                                    JsxRuntime.jsx(TruthTable$ValuePickerOption, {
                                          value: "Bottom"
                                        }),
                                    JsxRuntime.jsx(TruthTable$ValuePickerOption, {
                                          value: "False"
                                        }),
                                    JsxRuntime.jsx(TruthTable$ValuePickerOption, {
                                          value: "True"
                                        }),
                                    JsxRuntime.jsx(TruthTable$ValuePickerOption, {
                                          value: "Top"
                                        })
                                  ]
                                });
                    }))
            });
}

var TruthTableRow = {
  make: TruthTable$TruthTableRow
};

function TruthTable$TruthTableGrid(props) {
  var match = React.useState(function () {
        return [];
      });
  return JsxRuntime.jsx("div", {
              children: MoreReact.mapi(match[0], (function (row, key) {
                      return JsxRuntime.jsx(TruthTable$TruthTableRow, {
                                  row: row
                                }, key.toString());
                    }))
            });
}

var TruthTableGrid = {
  make: TruthTable$TruthTableGrid
};

function TruthTable(props) {
  var match = React.useState(function () {
        return 0;
      });
  var inputs = match[0];
  var match$1 = React.useState(function () {
        return 0;
      });
  var outputs = match$1[0];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(TruthTable$InputOutputSelector, {
                      inputs: inputs,
                      setInputs: match[1],
                      outputs: outputs,
                      setOutputs: match$1[1]
                    }),
                JsxRuntime.jsx(TruthTable$TruthTableGrid, {
                      inputs: inputs,
                      outputs: outputs
                    })
              ]
            });
}

var make = TruthTable;

export {
  InputOutputSelector ,
  ValuePickerOption ,
  TruthTableRow ,
  TruthTableGrid ,
  make ,
}
/* react Not a pure module */
