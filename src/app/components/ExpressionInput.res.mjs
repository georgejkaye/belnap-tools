// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as JsxRuntime from "react/jsx-runtime";

function ExpressionInput$InputBox(props) {
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsx("input", {
                    className: "w-34 rounded-lg border p-2",
                    placeholder: "Type expression",
                    type: "text"
                  }),
              className: "flex flex-row items-center gap-4"
            });
}

var InputBox = {
  make: ExpressionInput$InputBox
};

function ExpressionInput$CheatSheetItem(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("div", {
                      children: props.input,
                      className: "rounded-lg px-2 bg-gray-100 font-mono"
                    }),
                JsxRuntime.jsx("div", {
                      children: props.meaning,
                      className: ""
                    })
              ],
              className: "flex flex-row my-2 gap-2 mx-6"
            });
}

var CheatSheetItem = {
  make: ExpressionInput$CheatSheetItem
};

function ExpressionInput$CheatSheet(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(ExpressionInput$CheatSheetItem, {
                      input: "n",
                      meaning: "⊥ value ('none')"
                    }),
                JsxRuntime.jsx(ExpressionInput$CheatSheetItem, {
                      input: "b",
                      meaning: "f value ('false')"
                    }),
                JsxRuntime.jsx(ExpressionInput$CheatSheetItem, {
                      input: "b",
                      meaning: "t value ('true')"
                    }),
                JsxRuntime.jsx(ExpressionInput$CheatSheetItem, {
                      input: "b",
                      meaning: "⊤ value ('both')"
                    }),
                JsxRuntime.jsx(ExpressionInput$CheatSheetItem, {
                      input: "<exp> && <exp>",
                      meaning: "AND"
                    }),
                JsxRuntime.jsx(ExpressionInput$CheatSheetItem, {
                      input: "<exp> || <exp>",
                      meaning: "OR"
                    }),
                JsxRuntime.jsx(ExpressionInput$CheatSheetItem, {
                      input: "<exp> VV <exp>",
                      meaning: "join"
                    }),
                JsxRuntime.jsx(ExpressionInput$CheatSheetItem, {
                      input: "¬<exp>",
                      meaning: "NOT"
                    })
              ],
              className: "flex flex-row flex-wrap"
            });
}

var CheatSheet = {
  make: ExpressionInput$CheatSheet
};

function ExpressionInput(props) {
  var match = React.useState(function () {
        
      });
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(ExpressionInput$InputBox, {
                      expression: match[0],
                      setExpression: match[1]
                    }),
                JsxRuntime.jsx(ExpressionInput$CheatSheet, {})
              ]
            });
}

var make = ExpressionInput;

export {
  InputBox ,
  CheatSheetItem ,
  CheatSheet ,
  make ,
}
/* react Not a pure module */
